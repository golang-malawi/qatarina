/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/healthz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Health check endpoint
         * @description Returns the health status of the system
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["schema.HealthStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * System metrics endpoint
         * @description Returns system metrics for monitoring
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["schema.Metrics"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/system/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * System information
         * @description Returns general information about the system including version and build details
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["schema.SystemInfo"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * User login
         * @description Authenticates a user and returns access tokens
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Login credentials */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["schema.LoginRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["schema.LoginResponse"];
                    };
                };
                /** @description Invalid credentials or request body */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/auth/refresh-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh access token
         * @description Refreshes an expired access token using a valid refresh token
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Refresh token */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["schema.RefreshTokenRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["schema.RefreshTokenResponse"];
                    };
                };
                /** @description Invalid token */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * User signup
         * @description Registers a new user account
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description User registration details */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["schema.SignUpRequest"];
                };
            };
            responses: {
                /** @description Returns success message and token */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            [key: string]: unknown;
                        };
                    };
                };
                /** @description User already exists or invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/modules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all Modules
         * @description Get all Modules
         */
        get: operations["GetAllModules"];
        put?: never;
        /**
         * Create a Module
         * @description Create a Module
         */
        post: operations["CreateModule"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/modules/{moduleID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get one Module
         * @description Get one Module
         */
        get: operations["GetOneModule"];
        put?: never;
        /**
         * Update a Module
         * @description Update a Module
         */
        post: operations["UpdateModule"];
        /**
         * Delete a Module
         * @description Delete a Module
         */
        delete: operations["DeleteModule"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/pages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all pages
         * @description Get all pages
         */
        get: operations["GetAllPages"];
        put?: never;
        /**
         * Create a page
         * @description Create a page
         */
        post: operations["CreatePage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/pages/{pageID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get one page
         * @description Get one page
         */
        get: operations["GetOnePage"];
        put?: never;
        /**
         * Update a page
         * @description Update a page
         */
        post: operations["UpdatePage"];
        /**
         * Delete a page
         * @description Delete a page
         */
        delete: operations["DeletePage"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Projects available on the platform
         * @description List Projects available on the platform
         */
        get: operations["ListProject"];
        put?: never;
        /**
         * Create a Project
         * @description Create a Project
         */
        post: operations["CreateProject"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/{projectID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single Project
         * @description Get a single Project
         */
        get: operations["GetOneProject"];
        put?: never;
        /**
         * Update a Project
         * @description Update a Project
         */
        post: operations["UpdateProject"];
        /**
         * Delete a Project
         * @description Delete a Project
         */
        delete: operations["DeleteProject"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/{projectID}/modules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a Modules by project
         * @description Get a Modules by project
         */
        get: operations["GetProjectModule"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/{projectID}/test-cases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single Project's test cases
         * @description Get a single Project's test cases
         */
        get: operations["GetProjectTestCases"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/{projectID}/test-plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single Project's test plans
         * @description Get a single Project's test plans
         */
        get: operations["GetProjectTestPlans"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/{projectID}/test-runs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single Project's test runs
         * @description Get a single Project's test runs
         */
        get: operations["GetProjectTestRuns"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/{projectID}/testers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all Testers for a specific Project
         * @description Get all Testers for a specific Project
         */
        get: operations["GetProjectTesters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/{projectID}/testers/assign": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Assign testers to a project
         * @description Assign multiple testers to a project
         */
        post: operations["AssignTesters"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/import": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Import Projects from some source
         * @description Import Projects from some source
         */
        post: operations["ImportProject"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/projects/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search for a Project
         * @description Search for a Project
         */
        get: operations["SearchProjects"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get system settings
         * @description Retrieves all system settings
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            [key: string]: unknown;
                        };
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
            };
        };
        /**
         * Update system setting
         * @description Updates a specific system setting
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Setting key and value */
            requestBody: {
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            [key: string]: unknown;
                        };
                    };
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-cases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Test Cases
         * @description List Test Cases
         */
        get: operations["ListTestCases"];
        put?: never;
        /**
         * Create a new Test Case
         * @description Create a new Test Case
         */
        post: operations["CreateTestCase"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-cases/{testCaseID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single Test Case
         * @description Get a single Test Case
         */
        get: operations["GetOneTestCase"];
        put?: never;
        /**
         * Update a Test Case
         * @description Update a Test Case
         */
        post: operations["UpdateTestCase"];
        /**
         * Delete a test case
         * @description Delete a test case
         */
        delete: operations["DeleteTestCase"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-cases/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create multiple Test Cases at once
         * @description Create multiple Test Cases at once
         */
        post: operations["BulkCreateTestCases"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-cases/import/github": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Import GitHub issues as test cases
         * @description Imports open issues from a GitHub repository as test cases for a project
         */
        post: operations["ImportIssuesFromGitHubAsTestCases"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-cases/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search for Test Cases
         * @description Search for Test Cases
         */
        get: operations["SearchTestCases"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all Test Plans
         * @description List all Test Plans
         */
        get: operations["ListTestPlans"];
        put?: never;
        /**
         * Create a new Test Plan
         * @description Create a new Test Plan
         */
        post: operations["CreateTestPlan"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-plans/{testPlanID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get one Test Plan
         * @description Get one Test Plan
         */
        get: operations["GetOneTestPlan"];
        put?: never;
        /**
         * Update a Test Plan
         * @description Update a Test Plan
         */
        post: operations["UpdateTestPlan"];
        /**
         * Delete a Test Plan
         * @description Delete a Test Plan
         */
        delete: operations["DeleteTestPlan"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-plans/{testPlanID}/test-cases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Assign a test to a plan
         * @description Assign a test to a plan
         */
        post: operations["AssignTestsToPlan"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-plans/{testPlanID}/test-runs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all test cases of a test plan
         * @description List all test cases of a test plan
         */
        get: operations["GetTestPlanTestRuns"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-plans/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search test plans
         * @description Search test plans
         */
        get: operations["SearchTestPlans"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-runs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Test Runs
         * @description List Test Runs
         */
        get: operations["ListTestRuns"];
        put?: never;
        /**
         * Create a new Test Run
         * @description Create a new Test Run
         */
        post: operations["CreateTestRun"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-runs/{testRunID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get one Test Run
         * @description Get one Test Run
         */
        get: operations["GetOneTestRun"];
        put?: never;
        /**
         * Update a Test Run
         * @description Update a Test Run
         */
        post: operations["UpdateTestRun"];
        /**
         * Delete a Test Run
         * @description Delete a Test Run
         */
        delete: operations["DeleteTestRun"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-runs/{testRunID}/commit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Mark a Test Run as committed
         * @description Mark a Test Run as committed
         */
        post: operations["CommitTestRun"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/test-runs/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search for Test Runs
         * @description Search for Test Runs
         */
        get: operations["SearchTestRuns"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/testers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all Testers
         * @description List all Testers
         */
        get: operations["ListTesters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/testers.query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search all Testers
         * @description Search all Testers
         */
        get: operations["SearchTesters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/testers/{testerID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a Tester by ID
         * @description Get a Tester by ID
         */
        get: operations["GetOneTester"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/testers/invite/{email}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Invite a tester by Email
         * @description Invite a tester by Email
         */
        post: operations["InviteTester"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all Users
         * @description List all Users
         */
        get: operations["ListUsers"];
        put?: never;
        /**
         * Create a new User
         * @description Create a new User
         */
        post: operations["CreateUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{userID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get one User
         * @description Get one User
         */
        get: operations["GetOneUser"];
        put?: never;
        /**
         * Update a User
         * @description Update a User
         */
        post: operations["UpdateUser"];
        /**
         * Delete a user
         * @description Delete a user
         */
        delete: operations["DeleteUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/invite/{email}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Invite a User by email
         * @description Invite a User by email
         */
        post: operations["InviteUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search all Users
         * @description Search all Users
         */
        get: operations["SearchUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description State is the result of the test run */
        "dbsqlc.TestRunState": string;
        "problemdetail.ProblemDetail": {
            context?: unknown;
            detail?: string;
            title?: string;
            type?: string;
        };
        "schema.AssignTestsToPlanRequest": {
            planned_tests: components["schemas"]["schema.TestCaseAssignment"][];
            project_id: number;
            test_plan_id: number;
        };
        "schema.BulkAssignTesters": {
            project_id?: number;
            testers?: {
                role?: string;
                user_id?: number;
            }[];
        };
        "schema.BulkCreateTestCases": {
            project_id: number;
            test_cases: components["schemas"]["schema.CreateTestCaseRequest"][];
        };
        "schema.CommitTestRunResult": {
            actual_result: string;
            expected_result?: string;
            is_closed?: boolean;
            notes: string;
            result_state: components["schemas"]["dbsqlc.TestRunState"];
            test_run_id: string;
            tested_on: string;
        };
        "schema.CompactUserListResponse": {
            total?: number;
            users?: components["schemas"]["schema.UserCompact"][];
        };
        "schema.CreateProjectModuleRequest": {
            code: string;
            description: string;
            name: string;
            priority: number;
            projectID: number;
            type: string;
        };
        "schema.CreateTestCaseRequest": {
            code: string;
            description: string;
            feature_or_module: string;
            is_draft?: boolean;
            kind: string;
            project_id?: number;
            tags: string[];
            title: string;
        };
        "schema.CreateTestPlan": {
            assigned_to_id?: number;
            closed_at?: string;
            created_by_id?: number;
            description: string;
            kind: string;
            planned_tests?: components["schemas"]["schema.TestCaseAssignment"][];
            project_id: number;
            scheduled_end_at?: string;
            start_at: string;
            updated_by_id?: number;
        };
        "schema.HealthStatus": {
            message?: string;
            status?: string;
            uptime?: number;
        };
        "schema.ImportFromGithubRequest": {
            github_token?: string;
            owner?: string;
            project_id?: number;
            repository?: string;
        };
        "schema.ImportProjectRequest": Record<string, never>;
        "schema.LoginRequest": {
            email: string;
            password: string;
        };
        "schema.LoginResponse": {
            displayName?: string;
            email?: string;
            expires_at?: number;
            token?: string;
            user_id?: number;
        };
        "schema.Metrics": {
            errorsTotal?: number;
            requestsTotal?: number;
            uptimeSeconds?: number;
        };
        "schema.NewProjectRequest": {
            description: string;
            github_url?: string;
            name: string;
            parent_project_id?: number;
            project_owner_id?: number;
            version: string;
            website_url: string;
        };
        "schema.NewUserRequest": {
            display_name: string;
            email: string;
            first_name: string;
            last_name: string;
            organization_id?: number;
            password: string;
        };
        "schema.PageRequest": Record<string, never>;
        "schema.ProjectListResponse": {
            projects?: components["schemas"]["schema.ProjectResponse"][];
        };
        "schema.ProjectResponse": {
            created_at?: string;
            description?: string;
            github_url?: string;
            id?: number;
            is_active?: boolean;
            is_public?: boolean;
            jira_url?: string;
            monday_url?: string;
            owner_user_id?: number;
            title?: string;
            trello_url?: string;
            updated_at?: string;
            version?: string;
            website_url?: string;
        };
        "schema.RefreshTokenRequest": Record<string, never>;
        "schema.RefreshTokenResponse": Record<string, never>;
        "schema.SignUpRequest": {
            display_name: string;
            email: string;
            firstname: string;
            lastname: string;
            password: string;
        };
        "schema.SystemInfo": {
            buildDate?: string;
            developedBy?: string;
            projectUrl?: string;
            sha?: string;
            title?: string;
            version?: string;
        };
        "schema.TestCaseAssignment": {
            test_case_id?: string;
            user_ids?: number[];
        };
        "schema.TestCaseListResponse": {
            test_cases?: components["schemas"]["schema.TestCaseResponse"][];
        };
        "schema.TestCaseResponse": {
            code?: string;
            created_at?: string;
            created_by?: number;
            description?: string;
            feature_or_module?: string;
            id?: string;
            is_draft?: boolean;
            kind?: string;
            project_id?: number;
            tags?: string[];
            title?: string;
        };
        "schema.TestPlanListResponse": {
            test_plans?: components["schemas"]["schema.TestPlanResponseItem"][];
        };
        "schema.TestPlanResponseItem": {
            assigned_to_id?: number;
            closed_at?: string;
            created_at?: string;
            created_by_id?: number;
            description?: string;
            has_report?: boolean;
            id?: number;
            is_complete?: boolean;
            is_locked?: boolean;
            kind?: string;
            num_failures?: number;
            num_test_cases?: number;
            project_id?: number;
            scheduled_end_at?: string;
            start_at?: string;
            updated_at?: string;
            updated_by_id?: number;
        };
        "schema.TestRunListResponse": {
            test_runs?: components["schemas"]["schema.TestRunResponse"][];
        };
        "schema.TestRunResponse": {
            id?: string;
            project_id?: number;
            test_plan_id?: number;
        };
        "schema.Tester": {
            created_at?: string;
            last_login_at?: string;
            name?: string;
            project?: string;
            project_id?: number;
            role?: string;
            updated_at?: string;
            user_id?: number;
        };
        "schema.TesterListResponse": {
            testers?: components["schemas"]["schema.Tester"][];
        };
        "schema.UpdatePageRequest": Record<string, never>;
        "schema.UpdateProjectModuleRequest": {
            code: string;
            description?: string;
            id: number;
            name: string;
            priority: number;
            type: string;
        };
        "schema.UpdateProjectRequest": {
            description: string;
            github_url?: string;
            id: number;
            name: string;
            parent_project_id?: number;
            project_owner_id: number;
            version: string;
            website_url: string;
        };
        "schema.UpdateTestCaseRequest": {
            code: string;
            description: string;
            feature_or_module: string;
            id: string;
            is_draft: string;
            kind: string;
            tags: string[];
            title: string;
        };
        "schema.UpdateUserRequest": {
            address?: string;
            city: string;
            country_iso?: string;
            display_name: string;
            first_name: string;
            id?: number;
            last_name: string;
            org_id: number;
            phone?: string;
        };
        "schema.UserCompact": {
            createdAt?: string;
            displayName?: string;
            id?: number;
            username?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetAllModules: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CreateModule: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Module data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.CreateProjectModuleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOneModule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description moduleID */
                moduleID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    UpdateModule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description moduleID */
                moduleID: string;
            };
            cookie?: never;
        };
        /** @description id */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.UpdateProjectModuleRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    DeleteModule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description moduleID */
                moduleID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetAllPages: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CreatePage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Page data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.PageRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOnePage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pageID */
                pageID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    UpdatePage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pageID */
                pageID: string;
            };
            cookie?: never;
        };
        /** @description id */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.UpdatePageRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    DeletePage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pageID */
                pageID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ListProject: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.ProjectListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CreateProject: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Project Creation data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.NewProjectRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.ProjectResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOneProject: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Project ID */
                projectID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.ProjectResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    UpdateProject: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Project ID */
                projectID: string;
            };
            cookie?: never;
        };
        /** @description Project Update data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.UpdateProjectRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.ProjectResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    DeleteProject: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Project ID */
                projectID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Success message */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetProjectModule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description projectID */
                projectID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetProjectTestCases: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Project ID */
                projectID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetProjectTestPlans: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Project ID */
                projectID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestPlanListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetProjectTestRuns: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Project ID */
                projectID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestRunListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetProjectTesters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The project ID */
                projectID: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TesterListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    AssignTesters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Project ID */
                projectID: number;
            };
            cookie?: never;
        };
        /** @description Bulk assign testers request */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.BulkAssignTesters"];
            };
        };
        responses: {
            /** @description Success message */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ImportProject: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Import Specification */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.ImportProjectRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.ProjectListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    SearchProjects: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.ProjectListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ListTestCases: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CreateTestCase: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Create Test Case data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.CreateTestCaseRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOneTestCase: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Case ID */
                testCaseID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    UpdateTestCase: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Case ID */
                testCaseID: string;
            };
            cookie?: never;
        };
        /** @description Test Case update data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.UpdateTestCaseRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    DeleteTestCase: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Case ID */
                testCaseID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Success message */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    BulkCreateTestCases: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Bulk Create Test Case data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.BulkCreateTestCases"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ImportIssuesFromGitHubAsTestCases: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description GitHub import request */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.ImportFromGithubRequest"];
            };
        };
        responses: {
            /** @description List of imported test cases */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseListResponse"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    SearchTestCases: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TestCaseListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ListTestPlans: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CreateTestPlan: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Create Test plan data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.CreateTestPlan"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOneTestPlan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Plan ID */
                testPlanID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    UpdateTestPlan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Plan ID */
                testPlanID: string;
            };
            cookie?: never;
        };
        /** @description Test Plan data */
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    DeleteTestPlan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Plan ID */
                testPlanID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    AssignTestsToPlan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description testPlanID */
                testPlanID: string;
            };
            cookie?: never;
        };
        /** @description testPlanID */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.AssignTestsToPlanRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetTestPlanTestRuns: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Plan ID */
                testplanID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    SearchTestPlans: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description query */
                query: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ListTestRuns: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CreateTestRun: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Test Run data */
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOneTestRun: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Run ID */
                testRunID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    UpdateTestRun: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Run ID */
                testRunID: string;
            };
            cookie?: never;
        };
        /** @description Test Run update data */
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    DeleteTestRun: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Run ID */
                testRunID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CommitTestRun: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test Run ID */
                testRunID: string;
            };
            cookie?: never;
        };
        /** @description Test Run update data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.CommitTestRunResult"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    SearchTestRuns: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ListTesters: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.TesterListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    SearchTesters: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOneTester: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Tester ID */
                testerID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    InviteTester: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Email of tester */
                email: string;
            };
            cookie?: never;
        };
        /** @description Invite data */
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    ListUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["schema.CompactUserListResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    CreateUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description User data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.NewUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    GetOneUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                userID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    UpdateUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                userID: string;
            };
            cookie?: never;
        };
        /** @description User ID */
        requestBody: {
            content: {
                "application/json": components["schemas"]["schema.UpdateUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    DeleteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                userID: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    InviteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User's email */
                email: string;
            };
            cookie?: never;
        };
        /** @description User invite data */
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
    SearchUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["problemdetail.ProblemDetail"];
                };
            };
        };
    };
}
