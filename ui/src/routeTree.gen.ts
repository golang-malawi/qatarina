/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as TestersIndexImport } from './routes/testers/index'
import { Route as TestPlansIndexImport } from './routes/test-plans/index'
import { Route as TestCasesIndexImport } from './routes/test-cases/index'
import { Route as ReportsIndexImport } from './routes/reports/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as IntegrationsIndexImport } from './routes/integrations/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as authLogoutImport } from './routes/(auth)/logout'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as UsersNewIndexImport } from './routes/users/new/index'
import { Route as TestCasesNewIndexImport } from './routes/test-cases/new/index'
import { Route as TestCasesInboxIndexImport } from './routes/test-cases/inbox/index'
import { Route as ProjectsNewIndexImport } from './routes/projects/new/index'
import { Route as ProjectsProjectIdIndexImport } from './routes/projects/$projectId/index'
import { Route as UsersViewUserIDImport } from './routes/users/view/$userID'
import { Route as TestCasesInboxTestCaseIdIndexImport } from './routes/test-cases/inbox/$testCaseId/index'
import { Route as ProjectsProjectIdTestersIndexImport } from './routes/projects/$projectId/testers/index'
import { Route as ProjectsProjectIdTestPlansIndexImport } from './routes/projects/$projectId/test-plans/index'
import { Route as ProjectsProjectIdTestCasesIndexImport } from './routes/projects/$projectId/test-cases/index'
import { Route as ProjectsProjectIdSettingsIndexImport } from './routes/projects/$projectId/settings/index'
import { Route as ProjectsProjectIdReportsIndexImport } from './routes/projects/$projectId/reports/index'
import { Route as ProjectsProjectIdInsightsIndexImport } from './routes/projects/$projectId/insights/index'
import { Route as ProjectsProjectIdTestPlansNewIndexImport } from './routes/projects/$projectId/test-plans/new/index'
import { Route as ProjectsProjectIdTestCasesNewIndexImport } from './routes/projects/$projectId/test-cases/new/index'
import { Route as ProjectsProjectIdTestPlansTestPlanIDExecuteIndexImport } from './routes/projects/$projectId/test-plans/$testPlanID/execute/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const TestersIndexRoute = TestersIndexImport.update({
  id: '/testers/',
  path: '/testers/',
  getParentRoute: () => rootRoute,
} as any)

const TestPlansIndexRoute = TestPlansIndexImport.update({
  id: '/test-plans/',
  path: '/test-plans/',
  getParentRoute: () => rootRoute,
} as any)

const TestCasesIndexRoute = TestCasesIndexImport.update({
  id: '/test-cases/',
  path: '/test-cases/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsIndexRoute = ReportsIndexImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const IntegrationsIndexRoute = IntegrationsIndexImport.update({
  id: '/integrations/',
  path: '/integrations/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const authLogoutRoute = authLogoutImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const UsersNewIndexRoute = UsersNewIndexImport.update({
  id: '/users/new/',
  path: '/users/new/',
  getParentRoute: () => rootRoute,
} as any)

const TestCasesNewIndexRoute = TestCasesNewIndexImport.update({
  id: '/test-cases/new/',
  path: '/test-cases/new/',
  getParentRoute: () => rootRoute,
} as any)

const TestCasesInboxIndexRoute = TestCasesInboxIndexImport.update({
  id: '/test-cases/inbox/',
  path: '/test-cases/inbox/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsNewIndexRoute = ProjectsNewIndexImport.update({
  id: '/projects/new/',
  path: '/projects/new/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectIdIndexRoute = ProjectsProjectIdIndexImport.update({
  id: '/projects/$projectId/',
  path: '/projects/$projectId/',
  getParentRoute: () => rootRoute,
} as any)

const UsersViewUserIDRoute = UsersViewUserIDImport.update({
  id: '/users/view/$userID',
  path: '/users/view/$userID',
  getParentRoute: () => rootRoute,
} as any)

const TestCasesInboxTestCaseIdIndexRoute =
  TestCasesInboxTestCaseIdIndexImport.update({
    id: '/test-cases/inbox/$testCaseId/',
    path: '/test-cases/inbox/$testCaseId/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestersIndexRoute =
  ProjectsProjectIdTestersIndexImport.update({
    id: '/projects/$projectId/testers/',
    path: '/projects/$projectId/testers/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestPlansIndexRoute =
  ProjectsProjectIdTestPlansIndexImport.update({
    id: '/projects/$projectId/test-plans/',
    path: '/projects/$projectId/test-plans/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestCasesIndexRoute =
  ProjectsProjectIdTestCasesIndexImport.update({
    id: '/projects/$projectId/test-cases/',
    path: '/projects/$projectId/test-cases/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdSettingsIndexRoute =
  ProjectsProjectIdSettingsIndexImport.update({
    id: '/projects/$projectId/settings/',
    path: '/projects/$projectId/settings/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdReportsIndexRoute =
  ProjectsProjectIdReportsIndexImport.update({
    id: '/projects/$projectId/reports/',
    path: '/projects/$projectId/reports/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdInsightsIndexRoute =
  ProjectsProjectIdInsightsIndexImport.update({
    id: '/projects/$projectId/insights/',
    path: '/projects/$projectId/insights/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestPlansNewIndexRoute =
  ProjectsProjectIdTestPlansNewIndexImport.update({
    id: '/projects/$projectId/test-plans/new/',
    path: '/projects/$projectId/test-plans/new/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestCasesNewIndexRoute =
  ProjectsProjectIdTestCasesNewIndexImport.update({
    id: '/projects/$projectId/test-cases/new/',
    path: '/projects/$projectId/test-cases/new/',
    getParentRoute: () => rootRoute,
  } as any)

const ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute =
  ProjectsProjectIdTestPlansTestPlanIDExecuteIndexImport.update({
    id: '/projects/$projectId/test-plans/$testPlanID/execute/',
    path: '/projects/$projectId/test-plans/$testPlanID/execute/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/integrations/': {
      id: '/integrations/'
      path: '/integrations'
      fullPath: '/integrations'
      preLoaderRoute: typeof IntegrationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexImport
      parentRoute: typeof rootRoute
    }
    '/test-cases/': {
      id: '/test-cases/'
      path: '/test-cases'
      fullPath: '/test-cases'
      preLoaderRoute: typeof TestCasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/test-plans/': {
      id: '/test-plans/'
      path: '/test-plans'
      fullPath: '/test-plans'
      preLoaderRoute: typeof TestPlansIndexImport
      parentRoute: typeof rootRoute
    }
    '/testers/': {
      id: '/testers/'
      path: '/testers'
      fullPath: '/testers'
      preLoaderRoute: typeof TestersIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/view/$userID': {
      id: '/users/view/$userID'
      path: '/users/view/$userID'
      fullPath: '/users/view/$userID'
      preLoaderRoute: typeof UsersViewUserIDImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/': {
      id: '/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/new/': {
      id: '/projects/new/'
      path: '/projects/new'
      fullPath: '/projects/new'
      preLoaderRoute: typeof ProjectsNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/test-cases/inbox/': {
      id: '/test-cases/inbox/'
      path: '/test-cases/inbox'
      fullPath: '/test-cases/inbox'
      preLoaderRoute: typeof TestCasesInboxIndexImport
      parentRoute: typeof rootRoute
    }
    '/test-cases/new/': {
      id: '/test-cases/new/'
      path: '/test-cases/new'
      fullPath: '/test-cases/new'
      preLoaderRoute: typeof TestCasesNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/new/': {
      id: '/users/new/'
      path: '/users/new'
      fullPath: '/users/new'
      preLoaderRoute: typeof UsersNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/insights/': {
      id: '/projects/$projectId/insights/'
      path: '/projects/$projectId/insights'
      fullPath: '/projects/$projectId/insights'
      preLoaderRoute: typeof ProjectsProjectIdInsightsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/reports/': {
      id: '/projects/$projectId/reports/'
      path: '/projects/$projectId/reports'
      fullPath: '/projects/$projectId/reports'
      preLoaderRoute: typeof ProjectsProjectIdReportsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/settings/': {
      id: '/projects/$projectId/settings/'
      path: '/projects/$projectId/settings'
      fullPath: '/projects/$projectId/settings'
      preLoaderRoute: typeof ProjectsProjectIdSettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/test-cases/': {
      id: '/projects/$projectId/test-cases/'
      path: '/projects/$projectId/test-cases'
      fullPath: '/projects/$projectId/test-cases'
      preLoaderRoute: typeof ProjectsProjectIdTestCasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/test-plans/': {
      id: '/projects/$projectId/test-plans/'
      path: '/projects/$projectId/test-plans'
      fullPath: '/projects/$projectId/test-plans'
      preLoaderRoute: typeof ProjectsProjectIdTestPlansIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/testers/': {
      id: '/projects/$projectId/testers/'
      path: '/projects/$projectId/testers'
      fullPath: '/projects/$projectId/testers'
      preLoaderRoute: typeof ProjectsProjectIdTestersIndexImport
      parentRoute: typeof rootRoute
    }
    '/test-cases/inbox/$testCaseId/': {
      id: '/test-cases/inbox/$testCaseId/'
      path: '/test-cases/inbox/$testCaseId'
      fullPath: '/test-cases/inbox/$testCaseId'
      preLoaderRoute: typeof TestCasesInboxTestCaseIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/test-cases/new/': {
      id: '/projects/$projectId/test-cases/new/'
      path: '/projects/$projectId/test-cases/new'
      fullPath: '/projects/$projectId/test-cases/new'
      preLoaderRoute: typeof ProjectsProjectIdTestCasesNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/test-plans/new/': {
      id: '/projects/$projectId/test-plans/new/'
      path: '/projects/$projectId/test-plans/new'
      fullPath: '/projects/$projectId/test-plans/new'
      preLoaderRoute: typeof ProjectsProjectIdTestPlansNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/test-plans/$testPlanID/execute/': {
      id: '/projects/$projectId/test-plans/$testPlanID/execute/'
      path: '/projects/$projectId/test-plans/$testPlanID/execute'
      fullPath: '/projects/$projectId/test-plans/$testPlanID/execute'
      preLoaderRoute: typeof ProjectsProjectIdTestPlansTestPlanIDExecuteIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/dashboard': typeof DashboardIndexRoute
  '/integrations': typeof IntegrationsIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/test-cases': typeof TestCasesIndexRoute
  '/test-plans': typeof TestPlansIndexRoute
  '/testers': typeof TestersIndexRoute
  '/users': typeof UsersIndexRoute
  '/users/view/$userID': typeof UsersViewUserIDRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/new': typeof ProjectsNewIndexRoute
  '/test-cases/inbox': typeof TestCasesInboxIndexRoute
  '/test-cases/new': typeof TestCasesNewIndexRoute
  '/users/new': typeof UsersNewIndexRoute
  '/projects/$projectId/insights': typeof ProjectsProjectIdInsightsIndexRoute
  '/projects/$projectId/reports': typeof ProjectsProjectIdReportsIndexRoute
  '/projects/$projectId/settings': typeof ProjectsProjectIdSettingsIndexRoute
  '/projects/$projectId/test-cases': typeof ProjectsProjectIdTestCasesIndexRoute
  '/projects/$projectId/test-plans': typeof ProjectsProjectIdTestPlansIndexRoute
  '/projects/$projectId/testers': typeof ProjectsProjectIdTestersIndexRoute
  '/test-cases/inbox/$testCaseId': typeof TestCasesInboxTestCaseIdIndexRoute
  '/projects/$projectId/test-cases/new': typeof ProjectsProjectIdTestCasesNewIndexRoute
  '/projects/$projectId/test-plans/new': typeof ProjectsProjectIdTestPlansNewIndexRoute
  '/projects/$projectId/test-plans/$testPlanID/execute': typeof ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/dashboard': typeof DashboardIndexRoute
  '/integrations': typeof IntegrationsIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/test-cases': typeof TestCasesIndexRoute
  '/test-plans': typeof TestPlansIndexRoute
  '/testers': typeof TestersIndexRoute
  '/users': typeof UsersIndexRoute
  '/users/view/$userID': typeof UsersViewUserIDRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/new': typeof ProjectsNewIndexRoute
  '/test-cases/inbox': typeof TestCasesInboxIndexRoute
  '/test-cases/new': typeof TestCasesNewIndexRoute
  '/users/new': typeof UsersNewIndexRoute
  '/projects/$projectId/insights': typeof ProjectsProjectIdInsightsIndexRoute
  '/projects/$projectId/reports': typeof ProjectsProjectIdReportsIndexRoute
  '/projects/$projectId/settings': typeof ProjectsProjectIdSettingsIndexRoute
  '/projects/$projectId/test-cases': typeof ProjectsProjectIdTestCasesIndexRoute
  '/projects/$projectId/test-plans': typeof ProjectsProjectIdTestPlansIndexRoute
  '/projects/$projectId/testers': typeof ProjectsProjectIdTestersIndexRoute
  '/test-cases/inbox/$testCaseId': typeof TestCasesInboxTestCaseIdIndexRoute
  '/projects/$projectId/test-cases/new': typeof ProjectsProjectIdTestCasesNewIndexRoute
  '/projects/$projectId/test-plans/new': typeof ProjectsProjectIdTestPlansNewIndexRoute
  '/projects/$projectId/test-plans/$testPlanID/execute': typeof ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/logout': typeof authLogoutRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/integrations/': typeof IntegrationsIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/reports/': typeof ReportsIndexRoute
  '/test-cases/': typeof TestCasesIndexRoute
  '/test-plans/': typeof TestPlansIndexRoute
  '/testers/': typeof TestersIndexRoute
  '/users/': typeof UsersIndexRoute
  '/users/view/$userID': typeof UsersViewUserIDRoute
  '/projects/$projectId/': typeof ProjectsProjectIdIndexRoute
  '/projects/new/': typeof ProjectsNewIndexRoute
  '/test-cases/inbox/': typeof TestCasesInboxIndexRoute
  '/test-cases/new/': typeof TestCasesNewIndexRoute
  '/users/new/': typeof UsersNewIndexRoute
  '/projects/$projectId/insights/': typeof ProjectsProjectIdInsightsIndexRoute
  '/projects/$projectId/reports/': typeof ProjectsProjectIdReportsIndexRoute
  '/projects/$projectId/settings/': typeof ProjectsProjectIdSettingsIndexRoute
  '/projects/$projectId/test-cases/': typeof ProjectsProjectIdTestCasesIndexRoute
  '/projects/$projectId/test-plans/': typeof ProjectsProjectIdTestPlansIndexRoute
  '/projects/$projectId/testers/': typeof ProjectsProjectIdTestersIndexRoute
  '/test-cases/inbox/$testCaseId/': typeof TestCasesInboxTestCaseIdIndexRoute
  '/projects/$projectId/test-cases/new/': typeof ProjectsProjectIdTestCasesNewIndexRoute
  '/projects/$projectId/test-plans/new/': typeof ProjectsProjectIdTestPlansNewIndexRoute
  '/projects/$projectId/test-plans/$testPlanID/execute/': typeof ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/logout'
    | '/dashboard'
    | '/integrations'
    | '/projects'
    | '/reports'
    | '/test-cases'
    | '/test-plans'
    | '/testers'
    | '/users'
    | '/users/view/$userID'
    | '/projects/$projectId'
    | '/projects/new'
    | '/test-cases/inbox'
    | '/test-cases/new'
    | '/users/new'
    | '/projects/$projectId/insights'
    | '/projects/$projectId/reports'
    | '/projects/$projectId/settings'
    | '/projects/$projectId/test-cases'
    | '/projects/$projectId/test-plans'
    | '/projects/$projectId/testers'
    | '/test-cases/inbox/$testCaseId'
    | '/projects/$projectId/test-cases/new'
    | '/projects/$projectId/test-plans/new'
    | '/projects/$projectId/test-plans/$testPlanID/execute'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/logout'
    | '/dashboard'
    | '/integrations'
    | '/projects'
    | '/reports'
    | '/test-cases'
    | '/test-plans'
    | '/testers'
    | '/users'
    | '/users/view/$userID'
    | '/projects/$projectId'
    | '/projects/new'
    | '/test-cases/inbox'
    | '/test-cases/new'
    | '/users/new'
    | '/projects/$projectId/insights'
    | '/projects/$projectId/reports'
    | '/projects/$projectId/settings'
    | '/projects/$projectId/test-cases'
    | '/projects/$projectId/test-plans'
    | '/projects/$projectId/testers'
    | '/test-cases/inbox/$testCaseId'
    | '/projects/$projectId/test-cases/new'
    | '/projects/$projectId/test-plans/new'
    | '/projects/$projectId/test-plans/$testPlanID/execute'
  id:
    | '__root__'
    | '/'
    | '/(auth)/login'
    | '/(auth)/logout'
    | '/dashboard/'
    | '/integrations/'
    | '/projects/'
    | '/reports/'
    | '/test-cases/'
    | '/test-plans/'
    | '/testers/'
    | '/users/'
    | '/users/view/$userID'
    | '/projects/$projectId/'
    | '/projects/new/'
    | '/test-cases/inbox/'
    | '/test-cases/new/'
    | '/users/new/'
    | '/projects/$projectId/insights/'
    | '/projects/$projectId/reports/'
    | '/projects/$projectId/settings/'
    | '/projects/$projectId/test-cases/'
    | '/projects/$projectId/test-plans/'
    | '/projects/$projectId/testers/'
    | '/test-cases/inbox/$testCaseId/'
    | '/projects/$projectId/test-cases/new/'
    | '/projects/$projectId/test-plans/new/'
    | '/projects/$projectId/test-plans/$testPlanID/execute/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLoginRoute: typeof authLoginRoute
  authLogoutRoute: typeof authLogoutRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  IntegrationsIndexRoute: typeof IntegrationsIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
  TestCasesIndexRoute: typeof TestCasesIndexRoute
  TestPlansIndexRoute: typeof TestPlansIndexRoute
  TestersIndexRoute: typeof TestersIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
  UsersViewUserIDRoute: typeof UsersViewUserIDRoute
  ProjectsProjectIdIndexRoute: typeof ProjectsProjectIdIndexRoute
  ProjectsNewIndexRoute: typeof ProjectsNewIndexRoute
  TestCasesInboxIndexRoute: typeof TestCasesInboxIndexRoute
  TestCasesNewIndexRoute: typeof TestCasesNewIndexRoute
  UsersNewIndexRoute: typeof UsersNewIndexRoute
  ProjectsProjectIdInsightsIndexRoute: typeof ProjectsProjectIdInsightsIndexRoute
  ProjectsProjectIdReportsIndexRoute: typeof ProjectsProjectIdReportsIndexRoute
  ProjectsProjectIdSettingsIndexRoute: typeof ProjectsProjectIdSettingsIndexRoute
  ProjectsProjectIdTestCasesIndexRoute: typeof ProjectsProjectIdTestCasesIndexRoute
  ProjectsProjectIdTestPlansIndexRoute: typeof ProjectsProjectIdTestPlansIndexRoute
  ProjectsProjectIdTestersIndexRoute: typeof ProjectsProjectIdTestersIndexRoute
  TestCasesInboxTestCaseIdIndexRoute: typeof TestCasesInboxTestCaseIdIndexRoute
  ProjectsProjectIdTestCasesNewIndexRoute: typeof ProjectsProjectIdTestCasesNewIndexRoute
  ProjectsProjectIdTestPlansNewIndexRoute: typeof ProjectsProjectIdTestPlansNewIndexRoute
  ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute: typeof ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLoginRoute: authLoginRoute,
  authLogoutRoute: authLogoutRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  IntegrationsIndexRoute: IntegrationsIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ReportsIndexRoute: ReportsIndexRoute,
  TestCasesIndexRoute: TestCasesIndexRoute,
  TestPlansIndexRoute: TestPlansIndexRoute,
  TestersIndexRoute: TestersIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
  UsersViewUserIDRoute: UsersViewUserIDRoute,
  ProjectsProjectIdIndexRoute: ProjectsProjectIdIndexRoute,
  ProjectsNewIndexRoute: ProjectsNewIndexRoute,
  TestCasesInboxIndexRoute: TestCasesInboxIndexRoute,
  TestCasesNewIndexRoute: TestCasesNewIndexRoute,
  UsersNewIndexRoute: UsersNewIndexRoute,
  ProjectsProjectIdInsightsIndexRoute: ProjectsProjectIdInsightsIndexRoute,
  ProjectsProjectIdReportsIndexRoute: ProjectsProjectIdReportsIndexRoute,
  ProjectsProjectIdSettingsIndexRoute: ProjectsProjectIdSettingsIndexRoute,
  ProjectsProjectIdTestCasesIndexRoute: ProjectsProjectIdTestCasesIndexRoute,
  ProjectsProjectIdTestPlansIndexRoute: ProjectsProjectIdTestPlansIndexRoute,
  ProjectsProjectIdTestersIndexRoute: ProjectsProjectIdTestersIndexRoute,
  TestCasesInboxTestCaseIdIndexRoute: TestCasesInboxTestCaseIdIndexRoute,
  ProjectsProjectIdTestCasesNewIndexRoute:
    ProjectsProjectIdTestCasesNewIndexRoute,
  ProjectsProjectIdTestPlansNewIndexRoute:
    ProjectsProjectIdTestPlansNewIndexRoute,
  ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute:
    ProjectsProjectIdTestPlansTestPlanIDExecuteIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)/login",
        "/(auth)/logout",
        "/dashboard/",
        "/integrations/",
        "/projects/",
        "/reports/",
        "/test-cases/",
        "/test-plans/",
        "/testers/",
        "/users/",
        "/users/view/$userID",
        "/projects/$projectId/",
        "/projects/new/",
        "/test-cases/inbox/",
        "/test-cases/new/",
        "/users/new/",
        "/projects/$projectId/insights/",
        "/projects/$projectId/reports/",
        "/projects/$projectId/settings/",
        "/projects/$projectId/test-cases/",
        "/projects/$projectId/test-plans/",
        "/projects/$projectId/testers/",
        "/test-cases/inbox/$testCaseId/",
        "/projects/$projectId/test-cases/new/",
        "/projects/$projectId/test-plans/new/",
        "/projects/$projectId/test-plans/$testPlanID/execute/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/logout": {
      "filePath": "(auth)/logout.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/integrations/": {
      "filePath": "integrations/index.tsx"
    },
    "/projects/": {
      "filePath": "projects/index.tsx"
    },
    "/reports/": {
      "filePath": "reports/index.tsx"
    },
    "/test-cases/": {
      "filePath": "test-cases/index.tsx"
    },
    "/test-plans/": {
      "filePath": "test-plans/index.tsx"
    },
    "/testers/": {
      "filePath": "testers/index.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    },
    "/users/view/$userID": {
      "filePath": "users/view/$userID.tsx"
    },
    "/projects/$projectId/": {
      "filePath": "projects/$projectId/index.tsx"
    },
    "/projects/new/": {
      "filePath": "projects/new/index.tsx"
    },
    "/test-cases/inbox/": {
      "filePath": "test-cases/inbox/index.tsx"
    },
    "/test-cases/new/": {
      "filePath": "test-cases/new/index.tsx"
    },
    "/users/new/": {
      "filePath": "users/new/index.tsx"
    },
    "/projects/$projectId/insights/": {
      "filePath": "projects/$projectId/insights/index.tsx"
    },
    "/projects/$projectId/reports/": {
      "filePath": "projects/$projectId/reports/index.tsx"
    },
    "/projects/$projectId/settings/": {
      "filePath": "projects/$projectId/settings/index.tsx"
    },
    "/projects/$projectId/test-cases/": {
      "filePath": "projects/$projectId/test-cases/index.tsx"
    },
    "/projects/$projectId/test-plans/": {
      "filePath": "projects/$projectId/test-plans/index.tsx"
    },
    "/projects/$projectId/testers/": {
      "filePath": "projects/$projectId/testers/index.tsx"
    },
    "/test-cases/inbox/$testCaseId/": {
      "filePath": "test-cases/inbox/$testCaseId/index.tsx"
    },
    "/projects/$projectId/test-cases/new/": {
      "filePath": "projects/$projectId/test-cases/new/index.tsx"
    },
    "/projects/$projectId/test-plans/new/": {
      "filePath": "projects/$projectId/test-plans/new/index.tsx"
    },
    "/projects/$projectId/test-plans/$testPlanID/execute/": {
      "filePath": "projects/$projectId/test-plans/$testPlanID/execute/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
