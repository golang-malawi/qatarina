definitions:
  dbsqlc.TestRunState:
    enum:
    - pending
    - passed
    - failed
    type: string
    x-enum-varnames:
    - TestRunStatePending
    - TestRunStatePassed
    - TestRunStateFailed
  problemdetail.ProblemDetail:
    properties:
      context: {}
      detail:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  schema.AssignTestsToPlanRequest:
    properties:
      planned_tests:
        items:
          $ref: '#/definitions/schema.TestCaseAssignment'
        maxItems: 100
        minItems: 1
        type: array
      project_id:
        type: integer
      test_plan_id:
        type: integer
    required:
    - planned_tests
    - project_id
    - test_plan_id
    type: object
  schema.BulkAssignTesters:
    properties:
      project_id:
        type: integer
      testers:
        items:
          properties:
            role:
              type: string
            user_id:
              type: integer
          type: object
        type: array
    type: object
  schema.BulkCreateTestCases:
    properties:
      project_id:
        type: integer
      test_cases:
        items:
          $ref: '#/definitions/schema.CreateTestCaseRequest'
        maxItems: 100
        minItems: 1
        type: array
    required:
    - project_id
    - test_cases
    type: object
  schema.CommitTestRunResult:
    properties:
      actual_result:
        type: string
      expected_result:
        type: string
      is_closed:
        type: boolean
      notes:
        type: string
      result_state:
        allOf:
        - $ref: '#/definitions/dbsqlc.TestRunState'
        description: State is the result of the test run
      test_run_id:
        type: string
      tested_on:
        type: string
    required:
    - actual_result
    - notes
    - result_state
    - test_run_id
    - tested_on
    type: object
  schema.CompactUserListResponse:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/schema.UserCompact'
        type: array
    type: object
  schema.CreateProjectModuleRequest:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
      priority:
        type: integer
      projectID:
        type: integer
      type:
        type: string
    required:
    - code
    - description
    - name
    - priority
    - projectID
    - type
    type: object
  schema.CreateTestCaseRequest:
    properties:
      code:
        type: string
      description:
        type: string
      feature_or_module:
        type: string
      is_draft:
        type: boolean
      kind:
        type: string
      project_id:
        type: integer
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - code
    - description
    - feature_or_module
    - kind
    - tags
    - title
    type: object
  schema.CreateTestPlan:
    properties:
      assigned_to_id:
        type: integer
      closed_at:
        type: string
      created_by_id:
        type: integer
      description:
        type: string
      kind:
        type: string
      planned_tests:
        items:
          $ref: '#/definitions/schema.TestCaseAssignment'
        type: array
      project_id:
        type: integer
      scheduled_end_at:
        type: string
      start_at:
        type: string
      updated_by_id:
        type: integer
    required:
    - description
    - kind
    - project_id
    - start_at
    type: object
  schema.DashboardProjectRecord:
    properties:
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  schema.DashboardSummaryResponse:
    properties:
      closed_to_open_ratio:
        type: number
      project_count:
        type: integer
      recent_projects:
        items:
          $ref: '#/definitions/schema.DashboardProjectRecord'
        type: array
      test_case_count:
        type: integer
      test_plan_count:
        type: integer
      tester_count:
        type: integer
    type: object
  schema.HealthStatus:
    properties:
      message:
        type: string
      status:
        type: string
      uptime:
        type: integer
    type: object
  schema.ImportFromGithubRequest:
    properties:
      github_token:
        type: string
      owner:
        type: string
      project_id:
        type: integer
      repository:
        type: string
    type: object
  schema.ImportProjectRequest:
    type: object
  schema.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  schema.LoginResponse:
    properties:
      displayName:
        type: string
      email:
        type: string
      expires_at:
        type: integer
      token:
        type: string
      user_id:
        type: integer
    type: object
  schema.Metrics:
    properties:
      errorsTotal:
        type: integer
      requestsTotal:
        type: integer
      uptimeSeconds:
        type: integer
    type: object
  schema.NewProjectRequest:
    properties:
      description:
        type: string
      github_url:
        type: string
      name:
        type: string
      parent_project_id:
        type: integer
      project_owner_id:
        type: integer
      version:
        type: string
      website_url:
        type: string
    required:
    - description
    - name
    - version
    - website_url
    type: object
  schema.NewUserRequest:
    properties:
      display_name:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      organization_id:
        type: integer
      password:
        type: string
    required:
    - display_name
    - email
    - first_name
    - last_name
    - password
    type: object
  schema.PageRequest:
    type: object
  schema.ProjectListResponse:
    properties:
      projects:
        items:
          $ref: '#/definitions/schema.ProjectResponse'
        type: array
    type: object
  schema.ProjectResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      github_url:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_public:
        type: boolean
      jira_url:
        type: string
      monday_url:
        type: string
      owner_user_id:
        type: integer
      title:
        type: string
      trello_url:
        type: string
      updated_at:
        type: string
      version:
        type: string
      website_url:
        type: string
    type: object
  schema.RefreshTokenRequest:
    type: object
  schema.RefreshTokenResponse:
    type: object
  schema.SignUpRequest:
    properties:
      display_name:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
    required:
    - display_name
    - email
    - firstname
    - lastname
    - password
    type: object
  schema.SystemInfo:
    properties:
      buildDate:
        type: string
      developedBy:
        type: string
      projectUrl:
        type: string
      sha:
        type: string
      title:
        type: string
      version:
        type: string
    type: object
  schema.TestCaseAssignment:
    properties:
      test_case_id:
        type: string
      user_ids:
        items:
          type: integer
        type: array
    type: object
  schema.TestCaseListResponse:
    properties:
      test_cases:
        items:
          $ref: '#/definitions/schema.TestCaseResponse'
        type: array
    type: object
  schema.TestCaseResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      feature_or_module:
        type: string
      id:
        type: string
      is_draft:
        type: boolean
      kind:
        type: string
      project_id:
        type: integer
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  schema.TestPlanListResponse:
    properties:
      test_plans:
        items:
          $ref: '#/definitions/schema.TestPlanResponseItem'
        type: array
    type: object
  schema.TestPlanResponseItem:
    properties:
      assigned_to_id:
        type: integer
      closed_at:
        type: string
      created_at:
        type: string
      created_by_id:
        type: integer
      description:
        type: string
      has_report:
        type: boolean
      id:
        type: integer
      is_complete:
        type: boolean
      is_locked:
        type: boolean
      kind:
        type: string
      num_failures:
        type: integer
      num_test_cases:
        type: integer
      project_id:
        type: integer
      scheduled_end_at:
        type: string
      start_at:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  schema.TestRunListResponse:
    properties:
      test_runs:
        items:
          $ref: '#/definitions/schema.TestRunResponse'
        type: array
    type: object
  schema.TestRunResponse:
    properties:
      id:
        type: string
      project_id:
        type: integer
      test_plan_id:
        type: integer
    type: object
  schema.Tester:
    properties:
      created_at:
        type: string
      last_login_at:
        type: string
      name:
        type: string
      project:
        type: string
      project_id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  schema.TesterListResponse:
    properties:
      testers:
        items:
          $ref: '#/definitions/schema.Tester'
        type: array
    type: object
  schema.UpdatePageRequest:
    type: object
  schema.UpdateProjectModuleRequest:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      priority:
        type: integer
      type:
        type: string
    required:
    - code
    - id
    - name
    - priority
    - type
    type: object
  schema.UpdateProjectRequest:
    properties:
      description:
        type: string
      github_url:
        type: string
      id:
        type: integer
      name:
        type: string
      parent_project_id:
        type: integer
      project_owner_id:
        type: integer
      version:
        type: string
      website_url:
        type: string
    required:
    - description
    - id
    - name
    - project_owner_id
    - version
    - website_url
    type: object
  schema.UpdateTestCaseRequest:
    properties:
      code:
        type: string
      description:
        type: string
      feature_or_module:
        type: string
      id:
        type: string
      is_draft:
        type: string
      kind:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - code
    - description
    - feature_or_module
    - id
    - is_draft
    - kind
    - tags
    - title
    type: object
  schema.UpdateUserRequest:
    properties:
      address:
        type: string
      city:
        type: string
      country_iso:
        type: string
      display_name:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      org_id:
        type: integer
      phone:
        type: string
    required:
    - city
    - display_name
    - first_name
    - last_name
    - org_id
    type: object
  schema.UserCompact:
    properties:
      createdAt:
        type: string
      displayName:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /healthz:
    get:
      description: Returns the health status of the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.HealthStatus'
      summary: Health check endpoint
      tags:
      - system
  /metrics:
    get:
      description: Returns system metrics for monitoring
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Metrics'
      summary: System metrics endpoint
      tags:
      - system
  /system/info:
    get:
      description: Returns general information about the system including version
        and build details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SystemInfo'
      summary: System information
      tags:
      - system
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.LoginResponse'
        "400":
          description: Invalid credentials or request body
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: User login
      tags:
      - auth
  /v1/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes an expired access token using a valid refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.RefreshTokenResponse'
        "400":
          description: Invalid token
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Refresh access token
      tags:
      - auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Registers a new user account
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns success message and token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: User already exists or invalid request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: User signup
      tags:
      - auth
  /v1/dashboard/summary:
    get:
      consumes:
      - application/json
      description: Returns key metrics for dashboard
      operationId: DashboardSummary
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.DashboardSummaryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get dashboard summary
      tags:
      - dashboard
  /v1/modules:
    get:
      consumes:
      - application/json
      description: Get all Modules
      operationId: GetAllModules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get all Modules
      tags:
      - modules
    post:
      consumes:
      - application/json
      description: Create a Module
      operationId: CreateModule
      parameters:
      - description: Module data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.CreateProjectModuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create a Module
      tags:
      - modules
  /v1/modules/{moduleID}:
    delete:
      consumes:
      - application/json
      description: Delete a Module
      operationId: DeleteModule
      parameters:
      - description: moduleID
        in: path
        name: moduleID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Delete a Module
      tags:
      - modules
    get:
      consumes:
      - application/json
      description: Get one Module
      operationId: GetOneModule
      parameters:
      - description: moduleID
        in: path
        name: moduleID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get one Module
      tags:
      - modules
    post:
      consumes:
      - application/json
      description: Update a Module
      operationId: UpdateModule
      parameters:
      - description: moduleID
        in: path
        name: moduleID
        required: true
        type: string
      - description: id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.UpdateProjectModuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Update a Module
      tags:
      - modules
  /v1/pages:
    get:
      consumes:
      - application/json
      description: Get all pages
      operationId: GetAllPages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get all pages
      tags:
      - pages
    post:
      consumes:
      - application/json
      description: Create a page
      operationId: CreatePage
      parameters:
      - description: Page data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.PageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create a page
      tags:
      - pages
  /v1/pages/{pageID}:
    delete:
      consumes:
      - application/json
      description: Delete a page
      operationId: DeletePage
      parameters:
      - description: pageID
        in: path
        name: pageID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Delete a page
      tags:
      - pages
    get:
      consumes:
      - application/json
      description: Get one page
      operationId: GetOnePage
      parameters:
      - description: pageID
        in: path
        name: pageID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get one page
      tags:
      - pages
    post:
      consumes:
      - application/json
      description: Update a page
      operationId: UpdatePage
      parameters:
      - description: pageID
        in: path
        name: pageID
        required: true
        type: string
      - description: id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.UpdatePageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Update a page
      tags:
      - pages
  /v1/projects:
    get:
      consumes:
      - application/json
      description: List Projects available on the platform
      operationId: ListProject
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ProjectListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: List Projects available on the platform
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a Project
      operationId: CreateProject
      parameters:
      - description: Project Creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.NewProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create a Project
      tags:
      - projects
  /v1/projects/{projectID}:
    delete:
      consumes:
      - application/json
      description: Delete a Project
      operationId: DeleteProject
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Delete a Project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get a single Project
      operationId: GetOneProject
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get a single Project
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Update a Project
      operationId: UpdateProject
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      - description: Project Update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Update a Project
      tags:
      - projects
  /v1/projects/{projectID}/modules:
    get:
      consumes:
      - application/json
      description: Get a Modules by project
      operationId: GetProjectModule
      parameters:
      - description: projectID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get a Modules by project
      tags:
      - modules
  /v1/projects/{projectID}/test-cases:
    get:
      consumes:
      - application/json
      description: Get a single Project's test cases
      operationId: GetProjectTestCases
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestCaseListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get a single Project's test cases
      tags:
      - projects
  /v1/projects/{projectID}/test-plans:
    get:
      consumes:
      - application/json
      description: Get a single Project's test plans
      operationId: GetProjectTestPlans
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestPlanListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get a single Project's test plans
      tags:
      - projects
  /v1/projects/{projectID}/test-runs:
    get:
      consumes:
      - application/json
      description: Get a single Project's test runs
      operationId: GetProjectTestRuns
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestRunListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get a single Project's test runs
      tags:
      - projects
  /v1/projects/{projectID}/testers:
    get:
      consumes:
      - application/json
      description: Get all Testers for a specific Project
      operationId: GetProjectTesters
      parameters:
      - description: The project ID
        in: path
        name: projectID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TesterListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get all Testers for a specific Project
      tags:
      - projects
  /v1/projects/{projectID}/testers/assign:
    post:
      consumes:
      - application/json
      description: Assign multiple testers to a project
      operationId: AssignTesters
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: integer
      - description: Bulk assign testers request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.BulkAssignTesters'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Assign testers to a project
      tags:
      - projects
  /v1/projects/import:
    post:
      consumes:
      - application/json
      description: Import Projects from some source
      operationId: ImportProject
      parameters:
      - description: Import Specification
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.ImportProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ProjectListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Import Projects from some source
      tags:
      - projects
  /v1/projects/query:
    get:
      consumes:
      - application/json
      description: Search for a Project
      operationId: SearchProjects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ProjectListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Search for a Project
      tags:
      - projects
  /v1/settings:
    get:
      description: Retrieves all system settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      security:
      - ApiKeyAuth: []
      summary: Get system settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      description: Updates a specific system setting
      parameters:
      - description: Setting key and value
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      security:
      - ApiKeyAuth: []
      summary: Update system setting
      tags:
      - settings
  /v1/test-cases:
    get:
      consumes:
      - application/json
      description: List Test Cases
      operationId: ListTestCases
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestCaseListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: List Test Cases
      tags:
      - test-cases
    post:
      consumes:
      - application/json
      description: Create a new Test Case
      operationId: CreateTestCase
      parameters:
      - description: Create Test Case data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.CreateTestCaseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestCaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create a new Test Case
      tags:
      - test-cases
  /v1/test-cases/{testCaseID}:
    delete:
      consumes:
      - application/json
      description: Delete a test case
      operationId: DeleteTestCase
      parameters:
      - description: Test Case ID
        in: path
        name: testCaseID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Delete a test case
      tags:
      - test-cases
    get:
      consumes:
      - application/json
      description: Get a single Test Case
      operationId: GetOneTestCase
      parameters:
      - description: Test Case ID
        in: path
        name: testCaseID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestCaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get a single Test Case
      tags:
      - test-cases
    post:
      consumes:
      - application/json
      description: Update a Test Case
      operationId: UpdateTestCase
      parameters:
      - description: Test Case ID
        in: path
        name: testCaseID
        required: true
        type: string
      - description: Test Case update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.UpdateTestCaseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestCaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Update a Test Case
      tags:
      - test-cases
  /v1/test-cases/bulk:
    post:
      consumes:
      - application/json
      description: Create multiple Test Cases at once
      operationId: BulkCreateTestCases
      parameters:
      - description: Bulk Create Test Case data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.BulkCreateTestCases'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestCaseListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create multiple Test Cases at once
      tags:
      - test-cases
  /v1/test-cases/import/github:
    post:
      consumes:
      - application/json
      description: Imports open issues from a GitHub repository as test cases for
        a project
      operationId: ImportIssuesFromGitHubAsTestCases
      parameters:
      - description: GitHub import request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.ImportFromGithubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: List of imported test cases
          schema:
            $ref: '#/definitions/schema.TestCaseListResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Import GitHub issues as test cases
      tags:
      - test-cases
  /v1/test-cases/query:
    get:
      consumes:
      - application/json
      description: Search for Test Cases
      operationId: SearchTestCases
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TestCaseListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Search for Test Cases
      tags:
      - test-cases
  /v1/test-plans:
    get:
      consumes:
      - application/json
      description: List all Test Plans
      operationId: ListTestPlans
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: List all Test Plans
      tags:
      - test-plans
    post:
      consumes:
      - application/json
      description: Create a new Test Plan
      operationId: CreateTestPlan
      parameters:
      - description: Create Test plan data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.CreateTestPlan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create a new Test Plan
      tags:
      - test-plans
  /v1/test-plans/{testPlanID}:
    delete:
      consumes:
      - application/json
      description: Delete a Test Plan
      operationId: DeleteTestPlan
      parameters:
      - description: Test Plan ID
        in: path
        name: testPlanID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Delete a Test Plan
      tags:
      - test-plans
    get:
      consumes:
      - application/json
      description: Get one Test Plan
      operationId: GetOneTestPlan
      parameters:
      - description: Test Plan ID
        in: path
        name: testPlanID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get one Test Plan
      tags:
      - test-plans
    post:
      consumes:
      - application/json
      description: Update a Test Plan
      operationId: UpdateTestPlan
      parameters:
      - description: Test Plan ID
        in: path
        name: testPlanID
        required: true
        type: string
      - description: Test Plan data
        in: body
        name: request
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Update a Test Plan
      tags:
      - test-plans
  /v1/test-plans/{testPlanID}/test-cases:
    post:
      consumes:
      - application/json
      description: Assign a test to a plan
      operationId: AssignTestsToPlan
      parameters:
      - description: testPlanID
        in: path
        name: testPlanID
        required: true
        type: string
      - description: testPlanID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.AssignTestsToPlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Assign a test to a plan
      tags:
      - test-plans
  /v1/test-plans/{testPlanID}/test-runs:
    get:
      consumes:
      - application/json
      description: List all test cases of a test plan
      operationId: GetTestPlanTestRuns
      parameters:
      - description: Test Plan ID
        in: path
        name: testplanID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: List all test cases of a test plan
      tags:
      - test-plans
  /v1/test-plans/query:
    get:
      consumes:
      - application/json
      description: Search test plans
      operationId: SearchTestPlans
      parameters:
      - description: query
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Search test plans
      tags:
      - test-plans
  /v1/test-runs:
    get:
      consumes:
      - application/json
      description: List Test Runs
      operationId: ListTestRuns
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: List Test Runs
      tags:
      - test-runs
    post:
      consumes:
      - application/json
      description: Create a new Test Run
      operationId: CreateTestRun
      parameters:
      - description: Test Run data
        in: body
        name: request
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create a new Test Run
      tags:
      - test-runs
  /v1/test-runs/{testRunID}:
    delete:
      consumes:
      - application/json
      description: Delete a Test Run
      operationId: DeleteTestRun
      parameters:
      - description: Test Run ID
        in: path
        name: testRunID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Delete a Test Run
      tags:
      - test-runs
    get:
      consumes:
      - application/json
      description: Get one Test Run
      operationId: GetOneTestRun
      parameters:
      - description: Test Run ID
        in: path
        name: testRunID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get one Test Run
      tags:
      - test-runs
    post:
      consumes:
      - application/json
      description: Update a Test Run
      operationId: UpdateTestRun
      parameters:
      - description: Test Run ID
        in: path
        name: testRunID
        required: true
        type: string
      - description: Test Run update data
        in: body
        name: request
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Update a Test Run
      tags:
      - test-runs
  /v1/test-runs/{testRunID}/commit:
    post:
      consumes:
      - application/json
      description: Mark a Test Run as committed
      operationId: CommitTestRun
      parameters:
      - description: Test Run ID
        in: path
        name: testRunID
        required: true
        type: string
      - description: Test Run update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.CommitTestRunResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Mark a Test Run as committed
      tags:
      - test-runs
  /v1/test-runs/query:
    get:
      consumes:
      - application/json
      description: Search for Test Runs
      operationId: SearchTestRuns
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Search for Test Runs
      tags:
      - test-runs
  /v1/testers:
    get:
      consumes:
      - application/json
      description: List all Testers
      operationId: ListTesters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TesterListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: List all Testers
      tags:
      - testers
  /v1/testers.query:
    get:
      consumes:
      - application/json
      description: Search all Testers
      operationId: SearchTesters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Search all Testers
      tags:
      - testers
  /v1/testers/{testerID}:
    get:
      consumes:
      - application/json
      description: Get a Tester by ID
      operationId: GetOneTester
      parameters:
      - description: Tester ID
        in: path
        name: testerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get a Tester by ID
      tags:
      - testers
  /v1/testers/invite/{email}:
    post:
      consumes:
      - application/json
      description: Invite a tester by Email
      operationId: InviteTester
      parameters:
      - description: Email of tester
        in: path
        name: email
        required: true
        type: string
      - description: Invite data
        in: body
        name: request
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Invite a tester by Email
      tags:
      - testers
  /v1/users:
    get:
      consumes:
      - application/json
      description: List all Users
      operationId: ListUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CompactUserListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: List all Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new User
      operationId: CreateUser
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.NewUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Create a new User
      tags:
      - users
  /v1/users/{userID}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      operationId: DeleteUser
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get one User
      operationId: GetOneUser
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Get one User
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Update a User
      operationId: UpdateUser
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: User ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schema.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Update a User
      tags:
      - users
  /v1/users/invite/{email}:
    post:
      consumes:
      - application/json
      description: Invite a User by email
      operationId: InviteUser
      parameters:
      - description: User's email
        in: path
        name: email
        required: true
        type: string
      - description: User invite data
        in: body
        name: request
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Invite a User by email
      tags:
      - users
  /v1/users/query:
    get:
      consumes:
      - application/json
      description: Search all Users
      operationId: SearchUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemdetail.ProblemDetail'
      summary: Search all Users
      tags:
      - users
swagger: "2.0"
